<?xml version="1.0" encoding="UTF-8"?>
<mal:specification xmlns:com="http://www.ccsds.org/schema/COMSchema"
                   xmlns:svg="http://www.w3.org/2000/svg"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:mal="http://www.ccsds.org/schema/ServiceSchema">
  <mal:area name="Common" number="3" version="1"
            comment="This section details the Common Services; the structures used by the services are detailed in section 4. The services and structures are defined in terms of the MO Message Abstraction Layer (MAL) which is defined in reference [2], so it is possible to deploy them over any supported protocol and message transport.&#xA;The services defined here are also specified in terms of the COM which is defined in reference [3]. &#xA;To aid comprehension several tables are included for each service and operation definition. The table formats are the same as those used for the specification of the MO COM Services in reference [3]. The formats are fully described in reference [2] in section 2 and in reference [3] section 2, for COM usage.&#xA;All service specifications in this document are part of the Common Area. This has a short form number of '3'.">
    <mal:service xsi:type="com:ExtendedServiceType" name="Directory" number="1"
                 comment="The Directory service allows service providers to publish information about which services they provide and consumers to discover service provider address and capability information.&#xA;Service provider information is made available using the Directory service publishService operation and removed using the withdrawService operation.&#xA;The lookupService operation provides the ability for consumers to query the directory service based on a filter such as required service capability.&#xA;A service provider publishes, using the publishService operation, the set of services and the capabilities of those services that it offers. It also publishes with the capabilities one or more set of address information which defines one way to contact that service provider. It is possible for a provider to offer multiple service addresses as it allows the provider to support multiple message transports and encodings. Each service address lists the supported QoS levels and associated QoS properties available for that connection; a service consumer indicates the required QoS level and priority to a service provider by using these values in the initial message.&#xA;For services that have operations based on the publish and subscribe interaction pattern there may be required a separate URI for the broker component. To support this the directory service holds two URIs for each service, the URI of the primary interface and also a secondary one which, if present, is used for publish and subscribe-based operations. It is also possible that a publish and subscribe broker component is shared between more than one provider, known as a shared broker, and in this case the broker should be published as a directory service entry without a primary interface URI. The sharing providers should reference it by referencing it in the 'dataProviderObjInstId' field in their directory service entry.">
      <mal:documentation name="High Level Requirements" order="1">The directory service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for requesting service provider details based on a filter;&lt;/li&gt;
 &lt;li&gt;the capability for publishing new service provider details;&lt;/li&gt;
 &lt;li&gt;the capability for withdrawing service provider details.&lt;/li&gt;
&lt;/ol&gt;</mal:documentation>
      <mal:capabilitySet number="1">
        <mal:requestIP name="lookupProvider" number="1" supportInReplay="true"
                       comment="The lookup operation allows a service consumer to query the directory service to return a list of service providers that match the requested criteria. If no match is found, then an empty list is returned.">
          <mal:messages>
            <mal:request>
              <mal:field name="filter"
                         comment="The filter field shall include the service details of the query.&#xA;If the serviceProviderName field is the wildcard '*' then all service provider names shall be matched.&#xA;If the final identifier of the domain field of the filter is the wildcard '*', then all sub-domains shall be searched for matches.&#xA;If the wildcard is used in any other part of the domain other than the final one then an INVALID error shall be returned.&#xA;If the domain field only contains the wildcard '*' then all domains shall be matched.&#xA;If the network field is the wildcard '*' then all networks shall be matched.&#xA;If the sessionType field is NULL then all session types shall be matched.&#xA;If the sessionName field is the wildcard '*' then all session names shall be matched.&#xA;If the area field is the wildcard '0' then all areas names shall be matched.&#xA;If the service field is the wildcard '0' then all services shall be matched.&#xA;If the version field is the wildcard '0' then all area versions shall be matched.&#xA;If the requiredCapabilities field is an empty list then all service capability sets shall be matched.">
                <mal:type name="ServiceFilter" service="Directory" area="Common"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="matchingProviders"
                         comment="The operation shall return a list of service providers that match the filter.">
                <mal:type list="true" name="ProviderSummary" service="Directory" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Invalid filter value.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="publishProvider" number="2" supportInReplay="false"
                       comment="The publishProvider operation adds a new, or updates an existing, entry in the list of service providers held in the directory service.">
          <mal:messages>
            <mal:request>
              <mal:field name="newProviderDetails"
                         comment="The newProviderDetails field shall hold the provider details of the service to added or updated in the directory service.&#xA;If any of the fields of the newProviderDetails domain/sessionType/SessionName/network fields are either empty or contain the wildcard '*' an INVALID error shall be returned.&#xA;If the serviceProviderName field of the ProviderDetails structure is empty or contains the wildcard '*' an INVALID error shall be returned.&#xA;If the serviceProviderName field of the ProviderDetails structure is already being used by another service provider then a DUPLICATE error shall be returned.&#xA;If the area/service/version fields of the ProviderDetails structure contain '0' or the supportedCapabilities list is empty or contains '0' then an INVALID error shall be returned.&#xA;For each contained ProviderAddressDetails structure if the supportedLevels list is empty or the priorityLevels field is '0' then an INVALID error shall be returned.&#xA;If an error is being returned then no changes shall be made.">
                <mal:type name="PublishDetails" service="Directory" area="Common"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="providerObjectKey"
                         comment="The operation shall create a new ServiceProvider COM object to represent the new service provider.&#xA;The created object should be stored in the COM archive by the service provider.&#xA;The operation shall return an ObjectKey that represent the ServiceProvider COM object representing the provider.&#xA;The returned key may be used by the withdrawService operation to withdraw the provider from the directory service.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="The requested service provider name is already in use.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="withdrawProvider" number="3" supportInReplay="false"
                      comment="The withdrawProvider operation removes an existing entry from the list of service providers held in the directory service. If no match is found for the withdraw request, then nothing is changed.">
          <mal:messages>
            <mal:submit>
              <mal:field name="providerObjectKey"
                         comment="The providerObjectKey field shall hold the ObjectKey for the ServiceProvider COM object to remove from the directory service.&#xA;If the domain field is empty or contain the wildcard '*' or the supplied instId is '0' an INVALID error shall be returned.&#xA;If the fields do not match an existing ServiceProvider COM object then an UNKNOWN error shall be returned.&#xA;If an error is being returned then no chnages shall be made.&#xA;The matched provider shall be removed from the directory service.&#xA;The service provider should delete the matched object from the COM archive.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Provider to withdraw was not found.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted values are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="ProviderDetails" shortFormPart="1"
                       comment="The ProviderDetails structure holds information about a provider of a service and its capabilities. The structure contains a list of AddressDetails structures which should be used when the individual services listed by the provider do not supply address information. A provider may support more than one transport technology and therefore can be reached using more than one address.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="serviceCapabilities" canBeNull="false"
                     comment="The service capabilities supported by this service provider">
            <mal:type list="true" name="ServiceCapability" service="Directory" area="Common"/>
          </mal:field>
          <mal:field name="providerAddresses" canBeNull="false"
                     comment="List of address for all services of this service provider unless service specific addresses are supplied in the serviceCapabilities field. If all address information is supplied in the serviceCapabilities field this list should be zero length.">
            <mal:type list="true" name="AddressDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceCapability" shortFormPart="2"
                       comment="The ServiceCapability structure holds information about a service and the capabilities offered by a provider.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="serviceKey" canBeNull="false"
                     comment="The area, service, and version fields.">
            <mal:type name="ServiceKey" service="Directory" area="Common"/>
          </mal:field>
          <mal:field name="supportedCapabilities"
                     comment="The set of capabilities set numbers that this service provider supports. If NULL then all capabilities supported.">
            <mal:type list="true" name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="serviceProperties" canBeNull="false"
                     comment="Allows the passing of deployment specific service properties.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
          <mal:field name="serviceAddresses"
                     comment="Optional set of address details for this specific service which shall be used instead of the provider ones when accessing this service. If all address information is supplied in the containing ProviderDetails structure field this list should be replaced with a NULL.">
            <mal:type list="true" name="AddressDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceKey" shortFormPart="3" comment="">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="area" canBeNull="false"
                     comment="The area of this service taken from the numeric Area identifier of the service specification.">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="service" canBeNull="false"
                     comment="The service taken from the numeric Service identifier of the service specification.">
            <mal:type name="UShort" area="MAL"/>
          </mal:field>
          <mal:field name="version" canBeNull="false"
                     comment="The version of this service taken from the Area Version of the area specification.">
            <mal:type name="UOctet" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="AddressDetails" shortFormPart="4"
                       comment="The AddressDetails structure holds all information required by the Directory service about a service providers URI and attributes relating to QoS.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="supportedLevels" canBeNull="false"
                     comment="The set of possible QoS levels this service can provide.">
            <mal:type list="true" name="QoSLevel" area="MAL"/>
          </mal:field>
          <mal:field name="QoSproperties" canBeNull="false"
                     comment="Any QoS properties relevant to this address URIs and the specified transport.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
          <mal:field name="priorityLevels" canBeNull="false"
                     comment="The number of QoS priority levels that this provider supports.">
            <mal:type name="UInteger" area="MAL"/>
          </mal:field>
          <mal:field name="serviceURI"
                     comment="The Service URI that identifies the physical location of this service. NULL if represents a shared data provider (Broker).">
            <mal:type name="URI" area="MAL"/>
          </mal:field>
          <mal:field name="brokerURI"
                     comment="The broker URI that identifies the physical location of the publish and subscribe interface. NULL if service does not use publish and subscribe operations or if a shared broker is to be used.">
            <mal:type name="URI" area="MAL"/>
          </mal:field>
          <mal:field name="brokerProviderObjInstId"
                     comment="The object instance identifier of a ServiceProvider COM object that is the shared broker used by this provider.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ProviderSummary" shortFormPart="5"
                       comment="The ProviderSummary structure holds information about a provider of a service and its capabilities.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="providerKey" canBeNull="false"
                     comment="The COM object key of this service provider">
            <mal:type name="ObjectKey" area="COM"/>
          </mal:field>
          <mal:field name="providerName" canBeNull="false"
                     comment="The name of this service provider.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="providerDetails" canBeNull="false"
                     comment="The service capabilities supported by this provider">
            <mal:type name="ProviderDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="PublishDetails" shortFormPart="6"
                       comment="The PublishDetails structure holds all the required information to publish new service provider details.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="providerName" canBeNull="false"
                     comment="The unique service provider name; allows multiple service providers of the same service type to coexist in the directory service.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false" comment="The domain of the provider.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="sessionType" canBeNull="false"
                     comment="The type of session of the provider.">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sourceSessionName"
                     comment="If this is part of a replay session, this field holds the session name of the source session. NULL otherwise">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="network" canBeNull="false" comment="The network of the provider.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="providerDetails" canBeNull="false"
                     comment="The new service provider details.">
            <mal:type name="ProviderDetails" service="Directory" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceFilter" shortFormPart="7"
                       comment="The ServiceFilter structure holds all information required by the Directory service for service lookup operation. The field filters are AND'd together.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="serviceProviderName" canBeNull="false"
                     comment="The required service provider. Can be the wildcard value of '*' in which case matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false"
                     comment="The domain to query. Can be the wildcard value of '*' in which case matches all values.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="network" canBeNull="false"
                     comment="The network to match. Can be the wildcard value of '*' in which case matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="sessionType"
                     comment="The session type to match. Can be NULL in which case matches all values.">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sessionName" canBeNull="false"
                     comment="The session name to match. Can be the wildcard value of '*' in which case matches all values.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="serviceKey" canBeNull="false"
                     comment="The service to filter on, values can be '0' which matches all values.">
            <mal:type name="ServiceKey" service="Directory" area="Common"/>
          </mal:field>
          <mal:field name="requiredCapabilities" canBeNull="false"
                     comment="List of required capabilities. If zero length list then matches any.">
            <mal:type list="true" name="UInteger" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="A ServiceProvider object represents a service provider. The COM object body shall hold the service provider name.&#xA;The ServiceProvider COM object related link shall not be used and therefore set to NULL.&#xA;The ServiceProvider COM object source link shall not be used and therefore set to NULL.&#xA;A ProviderCapabilities object represents the supported capabilities of a service provider. The COM object body shall hold the provider details of the service provider.&#xA;The ProviderCapabilities COM object related link shall indicate which ServiceProvider COM object it links to.&#xA;The ProviderCapabilities COM object source link shall not be used and therefore set to NULL.&#xA;ServiceProvider objects shall be created by the publishService operation.&#xA;The object instance identifier for a ServiceProvider object shall be populated by the provider of the directory service.&#xA;For the AddressDetails of a particular ServiceProvider object, if the dataProviderObjInstId field contains a value and the dataURI field is NULL, then the dataURI value of the referenced provider shall be used.">
          <com:object name="ServiceProvider" number="1">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
          </com:object>
          <com:object name="ProviderCapabilities" number="2">
            <com:objectType>
              <mal:type name="ProviderDetails" service="Directory" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Directory" area="Common"/>
            </com:relatedObject>
          </com:object>
        </com:objects>
        <com:archiveUsage comment="All directory objects should be stored in the COM archive by the provider of the service."/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Login" number="2"
                 comment="The Login service defines the primary mechanism for the submission of authentication details to a deployment specific security system. It supports operations to allow a user to login, logout, report available roles, and also handover the login to another user.&#xA;The service is closely tied to the Access Control aspect of the MAL where the returned authentication identifiers are used in the MAL message header to authenticate and authorise message via Access Control.&#xA;The login service supports the concept of roles, where users may log in with a specific role; the meaning of each role is mission-specific, however it is expected that a specific role allocates the user privileges to invoke operations on mission operation services.&#xA;The use of login roles is optional but if they are used then the role details are held in the COM archive and the COM archive operations are used to manage the role definitions. It is expected that the login roles are maintained by the users responsible for the login service provider.&#xA;The form in which the password is sent to the Login service provider must be agreed upon beforehand and is dependent on the security system deployed. For example, most security implementations do not recommend the use of plain text passwords but rather some encrypted version of the password. For this reason the contents of the messages sent between the login service consumer and provider during authentication handshaking are implementation-specific.&#xA;The authentication and authorisation concept of the MO services is covered in section 3.6 of the Reference Model (R2).">
      <mal:documentation name="High Level Requirements" order="1">The login service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for logging in;&lt;/li&gt;
 &lt;li&gt;the capability for logging out;&lt;/li&gt;
 &lt;li&gt;the capability for reporting the list of possible roles for a login profile;&lt;/li&gt;
 &lt;li&gt;the capability to hand over an existing login from one user to another.&lt;/li&gt;
&lt;/ol&gt;</mal:documentation>
      <mal:documentation name="Functional Requirements" order="2"/>
      <mal:capabilitySet number="1">
        <mal:requestIP name="login" number="1" supportInReplay="false"
                       comment="The login operation allows a user to log in to the system. A user can log in more than once by using a different role; however, a specific deployment may place limits on the number of users that may use a specific role, and in that case will fail the login operation.">
          <mal:messages>
            <mal:request>
              <mal:field name="userDetails"
                         comment="The userDetails field shall contain the details of the new user and role combination.&#xA;If the username field of the supplied Profile structure is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;If the role field of the supplied Profile structure is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;If roles are required by the system and the role field of the supplied Profile structure is NULL then an INVALID error shall be returned.&#xA;The role field of the supplied Profile structure may be NULL if roles are not used by the system.&#xA;An UNKNOWN error shall be returned if the username, password and role combination are not correct for the system i.e. unknown user/role or incorrect password.&#xA;A DUPLICATE error shall be returned if the username and role combination is currently in use.&#xA;A TOO_MANY error shall be returned if the username or role are already used and exceed the permitted maximum usage value (deployment dependent).&#xA;If the login is successful the provider should create a new LoginInstance COM object and store it in the COM archive.&#xA;The related link of the new LoginInstance COM object shall be set to the requested LoginRole COM object.&#xA;A LoginEvent COM event shall be generated at this point.">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="password">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="authId"
                         comment="The returned authId field shall be used as the authenticationId field in future MAL messages by the consumer MAL for authentication. The token is specific to the user and role in use.">
                <mal:type name="Blob" area="MAL"/>
              </mal:field>
              <mal:field name="objInstId"
                         comment="The returned objInstId field shall contain the LoginInstance COM object instance identifier that was created by the login operation.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Username/role combination currently in use.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Role concurrent session limit count exceeded.">
              <mal:type name="TOO_MANY" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Unknown username/role/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:submitIP name="logout" number="2" supportInReplay="false"
                      comment="The logout operation allows a user to log out from the system. No information is passed in the message as the MAL authentication Id is enough to identify the login.">
          <mal:messages>
            <mal:submit comment="Upon reception of the message the operation shall remove the matched user from the set of logged in users in the login service provider.&#xA;A LogoutEvent COM event shall be generated at this point.&#xA;No errors shall be returned by this operation."/>
          </mal:messages>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="reportRoles" number="3" supportInReplay="false"
                       comment="The reportRoles operation returns the list of available roles for a specific user. This operation is expected to be called before a user logs in so that the software can provide a list of possible roles.">
          <mal:messages>
            <mal:request>
              <mal:field name="username"
                         comment="The username field shall hold the details of the user.&#xA;If the username field is either the wildcard '*', NULL or empty an INVALID error shall be returned.">
                <mal:type name="Identifier" area="MAL"/>
              </mal:field>
              <mal:field name="password"
                         comment="An UNKNOWN error shall be returned if the username and password combination are not correct for the system i.e. unknown user or incorrect password.">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="permittedRoles"
                         comment="The operation shall return a list of roles that are permitted for the user or NULL if roles are not used by the system.">
                <mal:type list="true" name="Identifier" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown username/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:requestIP name="handover" number="4" supportInReplay="false"
                       comment="The handover operation allows an existing login to be transferred to a new user. Two cases are expected here, the first is where the operation is used to change the user's current role, and the second is where an operations context is handed over to another user.">
          <mal:messages>
            <mal:request>
              <mal:field name="newUserDetails"
                         comment="The newUserDetails field shall contain the details of the new user and role combination.&#xA;If the username field of the supplied Profile structure is either NULL, the wildcard '*', or empty an INVALID error shall be returned.&#xA;If the role field of the supplied Profile structure is either the wildcard '*' or empty an INVALID error shall be returned.&#xA;If roles are required by the system and the role field of the supplied Profile structure is NULL then an INVALID error shall be returned.&#xA;The role field of the supplied Profile structure may be NULL if roles are not used by the system.&#xA;An UNKNOWN error shall be returned if the username, password and role combination are not correct for the system i.e. unknown user/role or incorrect password.&#xA;A DUPLICATE error shall be returned if the username and role combination is currently in use.&#xA;A TOO_MANY error shall be returned if the username or role are already used and exceed the permitted maximum usage value (deployment dependent).&#xA;The DUPLICATE and TOO_MANY checks shall take into account the fact that current operator/role combination will be logged out after the handover operation completes.&#xA;If the handover is successful the provider should create a new LoginInstance COM object and store it in the COM archive.&#xA;The related link of the new LoginInstance COM object shall be set to the requested LoginRole COM object.&#xA;The source link of the new LoginInstance COM object shall be set to the LoginInstance COM object that represents the previous login.">
                <mal:type name="Profile" service="Login" area="Common"/>
              </mal:field>
              <mal:field name="newUserPassword">
                <mal:type name="String" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="newAuthId"
                         comment="The returned newAuthId field shall be used as the authenticationId field in future MAL messages by the consumer MAL for authentication. The token is specific to the new user and role in use.">
                <mal:type name="Blob" area="MAL"/>
              </mal:field>
              <mal:field name="newObjInstId"
                         comment="The returned newObjInstId field shall contain the LoginInstance COM object instance identifier that was created by the operation.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown username/role/password combination.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Submitted profile contains invalid values.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Role concurrent session limit count exceeded.">
              <mal:type name="TOO_MANY" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Username/role combination currently in use.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="Profile" shortFormPart="1"
                       comment="The Profile structure contains details of the user who is logging on to take a specified role.">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="username" canBeNull="false" comment="The name of the user.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="role" comment="The optional role of the user.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Instances of a user login shall be represented as LoginInstance COM object.&#xA;Instances of a user role shall be represented as LoginRole COM object.&#xA;LoginInstance objects shall be created by the login and handover operations.&#xA;The object instance identifier for a LoginInstance object shall be populated by the provider of the Login service.&#xA;The LoginInstance object shall use the related link to indicate which LoginRole (if any) the login uses.&#xA;If a LoginInstance object was created during a login operation then the source link shall be set to NULL.&#xA;If a LoginInstance object was created during a handover operation it shall use the source link to indicate which LoginInstance the login was handed over from.">
          <com:object name="LoginInstance" number="1">
            <com:objectType>
              <mal:type name="Profile" service="Login" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="2" service="Login" area="Common"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:sourceObject>
          </com:object>
          <com:object name="LoginRole" number="2"
                      comment="The body of the LoginRole object is the role name Identifier.">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="When a user logs in a LoginEvent COM event shall be generated.&#xA;When a user logs out a LogoutEvent COM event shall be generated.&#xA;When the handover operation is successful a LogoutEvent COM event shall be generated for the previous login and a LoginEvent COM event shall be generated for the new login.&#xA;The LoginEvent event shall use the related link to indicate which LoginInstance object is being logged in.&#xA;The LogoutEvent event shall use the related link to indicate which LoginInstance object is being logged out.&#xA;The events shall not use the COM object source link and shall set it to NULL.&#xA;The events shall be published using the COM event service.">
          <com:event name="LoginEvent" number="3">
            <com:relatedObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:relatedObject>
          </com:event>
          <com:event name="LogoutEvent" number="4">
            <com:relatedObject>
              <com:objectType number="1" service="Login" area="Common"/>
            </com:relatedObject>
          </com:event>
        </com:events>
        <com:archiveUsage comment="LoginInstance objects should be stored in the COM archive.&#xA;When a login service event is published, the event object should be stored in the COM archive by the publisher.&#xA;LoginRole objects shall be stored in the COM archive.&#xA;The COM archive operations shall be user for creating/updating/deleting the LoginRole object."/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Interact" number="3"
                 comment="The interact service allows a consumer to raise interactions that can be completed by another consumer of the interact service in the system. The expected use is for software components of a system to request decision input or extra information from user of the system:&#xA;&lt;&lt; deployment diagram &gt;&gt;&#xA;There are four basic types of interaction supported by the service, the first is a simple acknowledge where a user can simply acknowledge the interaction, the second is a confirm where a user can confirm or reject the interaction, the third is a choice selection where the user selects from a supplied set of options, and the final interaction is a request for values where the user supplies a set of data values to the request.&#xA;The basic sequence of interaction is below:&#xA;&lt;&lt; sequence diagram &gt;&gt;&#xA;The interaction requests can contain a response timeout field that provides the interaction service provider with an upper time in which a response is required, if a response is not received in this time period, then the provider returns a TIMEDOUT error to the consumer that raised the interaction.&#xA;An interaction service provider implementation is responsible for determining which users may provide the interaction response and also for managing the situation where several users attempt to provide a response. For each interaction operation only one response will be returned to the consumer that initiated the interaction; it is the responsibility of the interaction service provider to ensure this is the case and also to inform the failed users that their interaction response was not used.">
      <mal:documentation name="High Level Requirements" order="1">The interact service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for requesting an acknowledge interaction;&lt;/li&gt;
 &lt;li&gt;the capability for responding to an acknowledge interaction;&lt;/li&gt;
 &lt;li&gt;the capability for requesting a confirm interaction;&lt;/li&gt;
 &lt;li&gt;the capability for responding to a confirm interaction;&lt;/li&gt;
 &lt;li&gt;the capability for requesting a choice interaction;&lt;/li&gt;
 &lt;li&gt;the capability for responding to a choice interaction;&lt;/li&gt;
 &lt;li&gt;the capability for requesting a get values interaction;&lt;/li&gt;
 &lt;li&gt;the capability for responding to a get values interaction;&lt;/li&gt;
 &lt;li&gt;the capability for listing the currently active interactions;&lt;/li&gt;
 &lt;li&gt;the capability for cancelling an interaction.&lt;/li&gt;
&lt;/ol&gt;
The interact service shall use the event service for notifying consumers of new interactions and also completion of existing interactions.
</mal:documentation>
      <mal:capabilitySet number="1">
        <mal:invokeIP name="raiseAcknowledge" number="1" supportInReplay="false"
                      comment="The raiseAcknowledge operation allows a consumer to request an acknowledge from a user/role. The user can only acknowledge the interaction; it cannot be declined (confirm is used in this case). It is expected to be used to allow a user to acknowledge that a specific operation can proceed for example. If no user or role is specified, then the interaction is for any user or role.&#xA;The interaction can be responded to via the matching respond operation.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="interactionDetails"
                         comment="If the destination field of the interactionDetails field is either the wildcard '*' or empty then the operation is for any user and the destinationIsRole field shall be ignored.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to FALSE, the destination field shall contain a user name.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to TRUE, the destination field shall contain a role name.&#xA;If an appropriate user or role cannot be identified then an UNKNOWN error shall be returned.">
                <mal:type name="InteractAcknowledgeDetails" service="Interact" area="Common"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement>
              <mal:field name="interactObjIds"
                         comment="The operation shall create new InteractRequest and InteractAckRequest COM objects to represent the interaction.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractRaised COM event shall be created and distributed by the service provider.&#xA;The returned interactObjIds field shall hold the COM object instance identifier of the InteractRequest COM object and the COM object type and instance identifier of the actual interact COM object.&#xA;The returned object instance identifier of the InteractRequest COM object in the interacObjInst field shall be used by the matching respond operation to match this interaction.&#xA;The returned object instance identifier of the InteractRequest COM object in the interacObjInst field may be used by the cancelInteraction operation to cancel this interaction.">
                <mal:type name="InteractObjectIds" service="Interact" area="Common"/>
              </mal:field>
            </mal:acknowledgement>
            <mal:response comment="If responseTimeout field of the interactionDetails field contains a non-zero duration and no response has been received in that time then the interaction shall be considered timed out.&#xA;If the interaction has timed out then the provider shall create new InteractResult and InteractTimedoutResult COM objects.&#xA;If the interaction has timed out then the created timed out objects should be stored in the COM archive by the service provider.&#xA;If the interaction has timed out then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;If the interaction has timed out then a TIMEDOUT error shall be returned.&#xA;If this operation is cancelled, then a CANCELLED error shall be returned.&#xA;The response shall be returned when the interaction has been completed."/>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="User or role could not be found to satisfy interaction.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="respondAcknowledge" number="2" supportInReplay="false"
                      comment="The respondAcknowledge operation is used to supply a response to an already raised acknowledge interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being acknowledged.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the authentication identifier of the SUBMIT message does not correspond to a profile whose username or role is the requested user or role for the interaction then an AUTHENTICATION_FAIL error shall be returned.&#xA;If the interactionId matches an InteractRequest but it is not an Acknowledgement interaction then an INVALID error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;If the interaction has not timed out or been cancelled then the operation shall create new InteractResult and InteractAckResult COM objects to represent the interaction response.&#xA;If the interaction has not timed out or been cancelled then the created objects should be stored in the COM archive by the service provider.&#xA;If the interaction has not timed out or been cancelled then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching raiseAcknowledge operation shall return the response at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The respondee is not the correct user or role for the interaction.">
              <mal:type name="AUTHORISATION_FAIL" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction is not of the correct interaction type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:invokeIP name="raiseConfirm" number="3" supportInReplay="false"
                      comment="The raiseConfirm operation allows a consumer to request confirmation from a user/role. The user can confirm or decline the interaction; it is expected to be used to present a user with a 'Yes/No' confirmation choice. If no user or role is specified, then the interaction is for any user or role.&#xA;The interaction can be responded to via the matching respond operation.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="interactionDetails"
                         comment="If the destination field of the interactionDetails field is either the wildcard '*' or empty then the operation is for any user and the destinationIsRole field shall be ignored.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to FALSE, the destination field shall contain a user name.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to TRUE, the destination field shall contain a role name.&#xA;If an appropriate user or role cannot be identified then an UNKNOWN error shall be returned.">
                <mal:type name="InteractConfirmDetails" service="Interact" area="Common"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement>
              <mal:field name="interactObjIds"
                         comment="The operation shall create new InteractRequest and InteractConfirmRequest COM objects to represent the interaction.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractRaised COM event shall be created and distributed by the service provider.&#xA;The returned interactObjIds field shall hold the COM object instance identifier of the InteractRequest COM object and the COM object type and instance identifier of the actual interact COM object.&#xA;The returned object instance identifier of the InteractRequest COM object in the interacObjInst field shall be used by the matching respond operation to match this interaction.&#xA;The returned object instance identifier of the InteractRequest COM object in the interacObjInst field may be used by the cancelInteraction operation to cancel this interaction.">
                <mal:type name="InteractObjectIds" service="Interact" area="Common"/>
              </mal:field>
            </mal:acknowledgement>
            <mal:response>
              <mal:field name="interactionResponse"
                         comment="If responseTimeout field of the interactionDetails field contains a non-zero duration and no response has been received in that time then the interaction shall be considered timed out.&#xA;If the interaction has timed out then the provider shall create new InteractResult and InteractTimedoutResult COM objects.&#xA;If the interaction has timed out then the created timed out objects should be stored in the COM archive by the service provider.&#xA;If the interaction has timed out then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;If the interaction has timed out then a TIMEDOUT error shall be returned.&#xA;If this operation is cancelled, then a CANCELLED error shall be returned.&#xA;The response shall be returned when the interaction has been completed.">
                <mal:type name="InteractConfirmResponse" service="Interact" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="User or role could not be found to satisfy interaction.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="respondConfirm" number="4" supportInReplay="false"
                      comment="The respondConfirm operation is used to supply a response to an already raised confirm interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being confirmed.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the authentication identifier of the SUBMIT message does not correspond to a profile whose username or role is the requested user or role for the interaction then an AUTHENTICATION_FAIL error shall be returned.&#xA;If the interactionId matches an InteractRequest but it is not a Confirm interaction then an INVALID error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;If the interaction has not timed out or been cancelled then the operation shall create new InteractResult and InteractConfirmResult COM objects to represent the interaction response.&#xA;If the interaction has not timed out or been cancelled then the created objects should be stored in the COM archive by the service provider.&#xA;If the interaction has not timed out or been cancelled then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching raiseConfirm operation shall return the response at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="confirmation">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction is not of the correct interaction type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="The respondee is not the correct user or role for the interaction.">
              <mal:type name="AUTHORISATION_FAIL" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:invokeIP name="raiseChoice" number="5" supportInReplay="false"
                      comment="The raiseChoice operation allows a consumer to request a user/role provide a choice from a set of predefined values. The user must pick one of the presented list of options; it is expected to be used to allow a user to select an option from the list of possible choices. If no user or role is specified, then the interaction is for any user or role.&#xA;The interaction can be responded to via the matching respond operation.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="interactionDetails"
                         comment="If the destination field of the interactionDetails field is either the wildcard '*' or empty then the operation is for any user and the destinationIsRole field shall be ignored.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to FALSE, the destination field shall contain a user name.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to TRUE, the destination field shall contain a role name.&#xA;If an appropriate user or role cannot be identified then an UNKNOWN error shall be returned.">
                <mal:type name="InteractChoiceDetails" service="Interact" area="Common"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement>
              <mal:field name="interactObjIds"
                         comment="The operation shall create new InteractRequest and InteractChoiceRequest COM objects to represent the interaction.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractRaised COM event shall be created and distributed by the service provider.&#xA;The returned interactObjIds field shall hold the COM object instance identifier of the InteractRequest COM object and the COM object type and instance identifier of the actual interact COM object.&#xA;The returned object instance identifier of the InteractRequest COM object in the interacObjInst field shall be used by the matching respond operation to match this interaction.&#xA;The returned object instance identifier of the InteractRequest COM object in the interacObjInst field may be used by the cancelInteraction operation to cancel this interaction.">
                <mal:type name="InteractObjectIds" service="Interact" area="Common"/>
              </mal:field>
            </mal:acknowledgement>
            <mal:response>
              <mal:field name="interactionResponse"
                         comment="If responseTimeout field of the interactionDetails field contains a non-zero duration and no response has been received in that time then the interaction shall be considered timed out.&#xA;If the interaction has timed out then the provider shall create new InteractResult and InteractTimedoutResult COM objects.&#xA;If the interaction has timed out then the created timed out objects should be stored in the COM archive by the service provider.&#xA;If the interaction has timed out then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;If the interaction has timed out then a TIMEDOUT error shall be returned.&#xA;If this operation is cancelled, then a CANCELLED error shall be returned.&#xA;The response shall be returned when the interaction has been completed.">
                <mal:type name="InteractChoiceResponse" service="Interact" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="User or role could not be found to satisfy interaction.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="respondChoice" number="6" supportInReplay="false"
                      comment="The respondChoice operation is used to supply a response to an already raised choice interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being responded to.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the authentication identifier of the SUBMIT message does not correspond to a profile whose username or role is the requested user or role for the interaction then an AUTHENTICATION_FAIL error shall be returned.&#xA;If the interactionId matches an InteractRequest but it is not a Choice interaction then an INVALID error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;If the interaction has not timed out or been cancelled then the operation shall create new InteractResult and InteractChoiceResult COM objects to represent the interaction response.&#xA;If the interaction has not timed out or been cancelled then the created objects should be stored in the COM archive by the service provider.&#xA;If the interaction has not timed out or been cancelled then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching raiseChoice operation shall return the response at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="choiceIndex">
                <mal:type name="UInteger" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The respondee is not the correct user or role for the interaction.">
              <mal:type name="AUTHORISATION_FAIL" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction is not of the correct interaction type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:invokeIP name="getValues" number="7" supportInReplay="false"
                      comment="The getValues operation allows a consumer to request a set of new values from a user/role. The user must supply the set of values; it is expected to be used to allow a user to provide input values for an operation. If no user or role is specified, then the interaction is for any user or role.&#xA;The interaction can be responded to via the matching respond operation.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="interactionDetails"
                         comment="If the destination field of the interactionDetails field is either the wildcard '*' or empty then the operation is for any user and the destinationIsRole field shall be ignored.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to FALSE, the destination field shall contain a user name.&#xA;If the destination field of the interactionDetails field is not the wildcard '*' or empty and the destinationIsRole field is set to TRUE, the destination field shall contain a role name.&#xA;If an appropriate user or role cannot be identified then an UNKNOWN error shall be returned.&#xA;For each entry in the defaultValues list field of the interactionDetails field, if the name field is either NULL or an empty string then an INVALID error shall be returned.&#xA;For each entry in the defaultValues list, the value field must be provided, even if it is empty (not NULL), so that the software used to request the value from an operator can determine the type of value required (Integer, Boolean, etc.).&#xA;For each entry in the defaultValues list, if the value field contains NULL then an INVALID error shall be returned as the receiving software will not be able to determine the desired value type.">
                <mal:type name="InteractValueDetails" service="Interact" area="Common"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement>
              <mal:field name="interactObjIds"
                         comment="The operation shall create new InteractRequest and InteractValueRequest COM objects to represent the interaction.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractRaised COM event shall be created and distributed by the service provider.&#xA;The returned interactObjIds field shall hold the COM object instance identifier of the InteractRequest COM object and the COM object type and instance identifier of the actual interact COM object.&#xA;The returned object instance identifier of the InteractRequest COM object in the interacObjInst field shall be used by the matching respond operation to match this interaction.&#xA;The returned object instance identifier of the InteractRequest COM object in the interacObjInst field may be used by the cancelInteraction operation to cancel this interaction.">
                <mal:type name="InteractObjectIds" service="Interact" area="Common"/>
              </mal:field>
            </mal:acknowledgement>
            <mal:response>
              <mal:field name="interactionResponse"
                         comment="If responseTimeout field of the interactionDetails field contains a non-zero duration and no response has been received in that time then the interaction shall be considered timed out.&#xA;If the interaction has timed out then the provider shall create new InteractResult and InteractTimedoutResult COM objects.&#xA;If the interaction has timed out then the created timed out objects should be stored in the COM archive by the service provider.&#xA;If the interaction has timed out then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;If the interaction has timed out then a TIMEDOUT error shall be returned.&#xA;If this operation is cancelled, then a CANCELLED error shall be returned.&#xA;The response shall be returned when the interaction has been completed.">
                <mal:type name="InteractValueResponse" service="Interact" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Invalid values in the request.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="User or role could not be found to satisfy interaction.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="respondValues" number="8" supportInReplay="false"
                      comment="The respondValues operation is used to supply a response to an already raised get values interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being responded to.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the authentication identifier of the SUBMIT message does not correspond to a profile whose username or role is the requested user or role for the interaction then an AUTHENTICATION_FAIL error shall be returned.&#xA;If the interactionId matches an InteractRequest but it is not a getValues interaction then an INVALID error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;If the interaction has not timed out or been cancelled then the operation shall create new InteractResult and InteractValueResult COM objects to represent the interaction response.&#xA;If the interaction has not timed out or been cancelled then the created objects should be stored in the COM archive by the service provider.&#xA;If the interaction has not timed out or been cancelled then an InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching getValues operation shall return the response at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="newValues">
                <mal:type list="true" name="NamedValue" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="The matched interaction is not of the correct interaction type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="The respondee is not the correct user or role for the interaction.">
              <mal:type name="AUTHORISATION_FAIL" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:requestIP name="listActiveInteractions" number="9" supportInReplay="true"
                       comment="The listActiveInteractions operation returns the list of active interactions, i.e. those that have not either had a responded, cancelled or timed out.">
          <mal:messages>
            <mal:request/>
            <mal:response>
              <mal:field name="activeInteractionObjInstIds"
                         comment="The operation shall return a list of ObjectDetails.&#xA;Each entry in the returned list represents a single active interaction.&#xA;The related field of the returned ObjectDetails holds the object instance identifier of the InteractRequest COM object that represents the active interaction.&#xA;The source field of the returned ObjectDetails holds the domain and object instance identifier of the interaction specific COM object for the active interaction.&#xA;The COM archive should be used to obtain the interaction specific details.">
                <mal:type list="true" name="ObjectDetails" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6">
        <mal:submitIP name="cancelInteraction" number="10" supportInReplay="false"
                      comment="The cancelInteraction operation allows a consumer of the service to cancel an active interaction.">
          <mal:messages>
            <mal:submit>
              <mal:field name="interactionId"
                         comment="The interactionId field contains the object instance identifier of the InteractRequest COM object that represents the interaction being cancelled.&#xA;If the interactionId does not match any existing interaction then an UNKNOWN shall be returned.&#xA;If the interactionId matches an InteractRequest but it has already had a response then a DUPLICATE error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has been cancelled with the cancelInteraction operation then a CANCELLED error shall be returned.&#xA;If the interactionId matches an InteractRequest but it has timed out then a TIMEDOUT error shall be returned.&#xA;The operation shall create new InteractResult and InteractCancelResult COM objects to represent the interaction response.&#xA;The created objects should be stored in the COM archive by the service provider.&#xA;An InteractComplete COM event shall be created and distributed by the service provider.&#xA;The matching raise operation shall return the CANCELLED error at this point.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested interaction is not known.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="The matched interaction has already had a response.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Interaction was already cancelled.">
              <mal:type name="CANCELLED" area="Common"/>
            </mal:errorRef>
            <mal:errorRef comment="Matched interaction timed out.">
              <mal:type name="TIMEDOUT" area="Common"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="InteractDetailsBase"
                       comment="The base Interact service request structure. Holds fields common to all Interact service requests.">
          <mal:field name="destination" canBeNull="false"
                     comment="Name of user or role to interact with, set to a wildcard or empty if for anyone.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="destinationIsRole" canBeNull="false"
                     comment="True if destination is a role name, value ignored if no destination supplied.">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="responseTimeout" canBeNull="false"
                     comment="Duration in which response must be received. '0' if no timeout required.">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="displayMessage" canBeNull="false" comment="Message to present to user.">
            <mal:type name="String" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractAcknowledgeDetails" shortFormPart="1"
                       comment="The InteractAcknowledgeDetails structure holds the fields required for an interaction acknowledgement.">
          <mal:extends>
            <mal:type name="InteractDetailsBase" service="Interact" area="Common"/>
          </mal:extends>
        </mal:composite>
        <mal:composite name="InteractConfirmDetails" shortFormPart="2"
                       comment="The InteractConfirmDetails structure holds the fields required for an interaction confirmation.">
          <mal:extends>
            <mal:type name="InteractDetailsBase" service="Interact" area="Common"/>
          </mal:extends>
        </mal:composite>
        <mal:composite name="InteractChoiceDetails" shortFormPart="3"
                       comment="The InteractChoiceDetails structure holds the fields required for an interaction choice query.">
          <mal:extends>
            <mal:type name="InteractDetailsBase" service="Interact" area="Common"/>
          </mal:extends>
          <mal:field name="allowedChoices" canBeNull="false"
                     comment="Set of choices for operator to select from.">
            <mal:type list="true" name="String" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractValueDetails" shortFormPart="4"
                       comment="The InteractValueDetails structure holds the fields required for an interaction value query.">
          <mal:extends>
            <mal:type name="InteractDetailsBase" service="Interact" area="Common"/>
          </mal:extends>
          <mal:field name="defaultValues" canBeNull="false"
                     comment="Default values to provide to operator. Both parts of the Element pairs structure must be populated as it provides the value type required. The first part of the pair shall always be a String that contains the name of the value required.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractObjectIds" shortFormPart="5"
                       comment="The InteractObjectIds holds the instance identifiers of the two COM objects used to represent an interaction.">
          <mal:field name="interactObjInstId" canBeNull="false"
                     comment="The object instance identifier of the InteractRequest COM Object.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="detailsObjType" canBeNull="false"
                     comment="The COM object type of the actual Interact COM object.">
            <mal:type name="ObjectType" area="COM"/>
          </mal:field>
          <mal:field name="detailsObjInstId" canBeNull="false"
                     comment="The COM object instance identifier of the actual Interact COM object">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractConfirmResponse" shortFormPart="6"
                       comment="The InteractConfirmResponse structure represents a response to an interaction confirm query.">
          <mal:field name="confirmation" canBeNull="false" comment="Response to interaction.">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractChoiceResponse" shortFormPart="7"
                       comment="The InteractChoiceResponse structure represents a response to a choice interaction query.">
          <mal:field name="choiceIndex" canBeNull="false"
                     comment="Index of chosen value from provided list.">
            <mal:type name="UInteger" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="InteractValueResponse" shortFormPart="8"
                       comment="The InteractValueResponse structure represents a response to a value interaction query.">
          <mal:field name="newValues" canBeNull="false"
                     comment="New values provided by operator. Only changed values from those supplied in the request shall be returned. The type of the value returned must match that of the default value sent in the request.">
            <mal:type list="true" name="NamedValue" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Two COM objects shall be used to hold an interaction request details, the first is a InteractRequest COM object and the second a COM object that holds the actual interaction specific details of the interaction.&#xA;The actual interaction request details shall be represented as one of the specific interaction COM objects (InteractAckRequest, InteractConfirmRequest, InteractChoiceRequest, InteractValueRequest).&#xA;The actual interaction request details COM objects (InteractAckRequest, InteractConfirmRequest, InteractChoiceRequest, InteractValueRequest) shall set their related and source links to NULL.&#xA;The InteractRequest object shall use the source link to indicate which actual interaction request details COM object (InteractAckRequest, InteractConfirmRequest, InteractChoiceRequest, InteractValueRequest) it uses.&#xA;Two COM objects shall be used to hold an interaction response details, the first is a InteractResult COM object and the second a COM object that holds the actual interaction specific response of the interaction.&#xA;The actual interaction response details shall be represented as one of the specific interaction COM objects (InteractTimedoutResult, InteractCancelResult, InteractAckResult, InteractConfirmResult, InteractChoiceResult, InteractValueResult).&#xA;The actual interaction response details COM objects (InteractTimedoutResult, InteractCancelResult, InteractAckResult, InteractConfirmResult, InteractChoiceResult, InteractValueResult) shall set their related and source links to NULL.&#xA;The InteractResult object shall use the related link to indicate which interaction request it is the response to.&#xA;The InteractResult object shall use the source link to indicate which actual interaction response details COM object (InteractTimedoutResult, InteractCancelResult, InteractAckResult, InteractConfirmResult, InteractChoiceResult, InteractValueResult) it uses.">
          <com:object name="InteractRequest" number="1"
                      comment="The body of the object holds the ObjectType that is combined with the related link to locate the actual Interact COM Object that holds the request.">
            <com:sourceObject/>
          </com:object>
          <com:object name="InteractResult" number="2"
                      comment="The body of the object holds the ObjectType that is combined with the related link to locate the actual Interact COM Object that holds the result.">
            <com:relatedObject>
              <com:objectType number="1" service="Interact" area="Common"/>
            </com:relatedObject>
            <com:sourceObject/>
          </com:object>
          <com:object name="InteractAckRequest" number="5">
            <com:objectType>
              <mal:type name="InteractAcknowledgeDetails" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractConfirmRequest" number="6">
            <com:objectType>
              <mal:type name="InteractConfirmDetails" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractChoiceRequest" number="7">
            <com:objectType>
              <mal:type name="InteractChoiceDetails" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractValueRequest" number="8">
            <com:objectType>
              <mal:type name="InteractValueDetails" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractTimedoutResult" number="9"/>
          <com:object name="InteractCancelResult" number="10"/>
          <com:object name="InteractAckResult" number="11"/>
          <com:object name="InteractConfirmResult" number="12">
            <com:objectType>
              <mal:type name="InteractConfirmResponse" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractChoiceResult" number="13">
            <com:objectType>
              <mal:type name="InteractChoiceResponse" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="InteractValueResult" number="14">
            <com:objectType>
              <mal:type name="InteractValueResponse" service="Interact" area="Common"/>
            </com:objectType>
          </com:object>
        </com:objects>
        <com:events comment="When an interaction is raised it shall cause an InteractRaised COM event to be published using the COM event service.&#xA;The related link of the InteractRaised event shall be the InteractRequest COM object that represents the interaction.&#xA;The source link of the InteractRaised event shall be the COM object that raised the interaction, most likely a LoginInstance COM Object.&#xA;The body of the InteractRaised event shall be the object identifier of the desired destination, either a specific LoginInstance or LoginRole COM object, or NULL if any destination is request.&#xA;When an interaction is responded to it shall cause an InteractComplete COM event to be published using the COM event service.&#xA;The related link of the InteractComplete object shall be the InteractResult COM object that represents the interaction response.&#xA;The source link of the InteractComplete object shall be the COM object that responded to the interaction, most likely a LoginInstance COM Object for completed or cancelled interactions, and NULL for timed out interactions.">
          <com:event name="InteractRaised" number="3">
            <com:objectType>
              <mal:type name="ObjectId" area="COM"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Interact" area="Common"/>
            </com:relatedObject>
            <com:sourceObject comment="The source shall link to the COM object that raised the interaction, most likely a LoginInstance COM Object"/>
          </com:event>
          <com:event name="InteractComplete" number="4">
            <com:relatedObject>
              <com:objectType number="2" service="Interact" area="Common"/>
            </com:relatedObject>
            <com:sourceObject comment="The source shall link to the COM object that completed the interaction, most likely a LoginInstance COM Object for completed or cancelled interactions, and NULL for timed out interactions."/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="All interact objects should be stored in the COM archive by the provider of the service.&#xA;When an interaction event is published, the event object should be stored in the COM archive by the publisher."/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Replay" number="4"
                 comment="The Replay service allows a consumer to create, control and delete replay sessions. The replay session is a read-only duplicate of an existing live or simulation session that allows the consumer to control the current time. As well as specifying the initial replay time, the replay can be controlled in a similar way to a video player (play, pause, fast forward, rewind, single step, jump to specific time etc.).&#xA;Access control for a replay session is provided via standard MAL access control. The replay service provider can determine who created a specific replay and can therefore limit further replay operations internally. The specific replay access control policy is a deployment-dependent issue.&#xA;It should be noted that the 'Support in Replay' flag is set to 'No' for all replay operations. This is because these operations are used to control a replay session and cannot be issued inside a replay session.">
      <mal:documentation name="High Level Requirements" order="1">The replay service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for pausing a replay session;&lt;/li&gt;
 &lt;li&gt;the capability for resuming playback of a replay session;&lt;/li&gt;
 &lt;li&gt;the capability for single stepping a replay session;&lt;/li&gt;
 &lt;li&gt;the capability for updating the playback rates and current time of a replay session;&lt;/li&gt;
 &lt;li&gt;the capability for listing the active replay details;&lt;/li&gt;
 &lt;li&gt;the capability for creating a new replay session;&lt;/li&gt;
 &lt;li&gt;the capability for deleting an existing replay session.&lt;/li&gt;
&lt;/ol&gt;</mal:documentation>
      <mal:documentation name="Functional Requirements" order="2">Replay sessions shall be based on an existing LIVE or SIMULATION session.
New replay session shall be created using the addReplay operation.
The addReplay operation shall take the details of the existing LIVE or SIMULATION session to duplicate and a time to use as the current time for the replay session.
The rate field of the PlaybackSettings structure shall control the current replay rate for the replay session. For example, setting the rate to 2.5 would play the items at two and a half times the normal rate.
The interval field of the PlaybackSettings shall control the current replay step interval for the replay session.
The replay service provider shall publish ReplayStatus events whenever the current time or replay state of the replay session changes.
When the end of a replay session is reached, either before the first entry for backwards replay and after the last entry for forwards replay, the state of a replay shall be automatically switched to STOPPED.
</mal:documentation>
      <mal:capabilitySet number="1">
        <mal:submitIP name="pauseReplay" number="1" supportInReplay="false"
                      comment="The pauseReplay operation allows a consumer to pause playback of the selected replay session. Effectively this sets the replay session state to STOPPED.">
          <mal:messages>
            <mal:submit>
              <mal:field name="replayObjInstId"
                         comment="The replayObjInstId field shall match an existing Replay COM object.&#xA;If no matching Replay COM object can be found then an UNKNOWN error shall be returned.&#xA;If the matched replay session is in the STOPPED state an INVALID error shall be returned.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown replay session.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Session was already in the STOPPED state.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="resumeReplay" number="2" supportInReplay="false"
                      comment="The resumeReplay operation allows a consumer to resume playback of the selected replay session.">
          <mal:messages>
            <mal:submit>
              <mal:field name="replayObjInstId"
                         comment="The replayObjInstId field shall match an existing Replay COM object.&#xA;If no matching Replay COM object can be found then an UNKNOWN error shall be returned.&#xA;If the matched replay session is not in the STOPPED state an INVALID error shall be returned.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="playForwards"
                         comment="If the playForwards field it set to TRUE then resume playback in the forwards direction otherwise play backwards at the current rate.">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown replay session.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Session was not in the STOPPED state.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:submitIP name="forwardStep" number="3" supportInReplay="false"
                      comment="The forwardStep operation allows the service consumer to instruct the replay to advance from its current position to the time of either the next item or by the current step interval. The provider re-publishes the stored items to observing service consumers in accordance with their registered interests.">
          <mal:messages>
            <mal:submit>
              <mal:field name="replayObjInstId"
                         comment="The replayObjInstId field shall match an existing Replay COM object.&#xA;If no matching Replay COM object can be found then an UNKNOWN error shall be returned.&#xA;If the matched replay session is not in the STOPPED state an INVALID error shall be returned.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="byItem"
                         comment="The supplied Boolean byItem field shall indicate whether to step to the next item (value True) or by the current step interval (value False).">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown replay session.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Session was not in the STOPPED state.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="backwardStep" number="4" supportInReplay="false"
                      comment="The backwardStep operation allows the service consumer to instruct the replay to step backwards from its current position to the time of either the previous item or by the current step interval. The provider re-publishes the stored items to observing service consumers in accordance with their registered interests.">
          <mal:messages>
            <mal:submit>
              <mal:field name="replayObjInstId"
                         comment="The replayObjInstId field shall match an existing Replay COM object.&#xA;If no matching Replay COM object can be found then an UNKNOWN error shall be returned.&#xA;If the matched replay session is not in the STOPPED state an INVALID error shall be returned.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="byItem"
                         comment="The supplied Boolean byItem field shall indicate whether to step to the previous item (value True) or by the current step interval (value False).">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown replay session.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Session was not in the STOPPED state.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:submitIP name="updateReplay" number="5" supportInReplay="false"
                      comment="The updateReplay operation allows a consumer to modify the playback settings of an existing replay. The operation does not require the replay to be in any particular state and the change in replay settings takes effect immediately.&#xA;The updated replay details should be stored in the COM archive by the service provider.">
          <mal:messages>
            <mal:submit>
              <mal:field name="replayObjInstId"
                         comment="The replayObjInstId field shall contain the object instance identifier of the Replay object to be updated.&#xA;The supplied object instance identifier shall match an existing Replay COM object, an UNKNOWN error shall be raised if this is not the case.&#xA;If an error is raised then the replay shall not be updated as a result of this operation call.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="newPlaybackDetails"
                         comment="The newPlaybackDetails field shall contain the replacement PlaybackSettings.">
                <mal:type name="ReplayPlaybackSettings" service="Replay" area="Common"/>
              </mal:field>
              <mal:field name="newCurrentTime"
                         comment="The newCurrentTime field shall contain the new current time for the replay session.&#xA;The newCurrentTime field may be NULL in which case the current time of the replay shall not be modified.&#xA;The existing PlaybackSettings of the matched Replay COM object shall be replaced by the supplied values.&#xA;The matched replay shall continue its replay based on the new playback settings.&#xA;The updated replay details should be stored in the COM archive by the service provider.&#xA;If the current time of the matched replay is modified by this operation call then a new ReplayStatus event shall be published.">
                <mal:type name="Time" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown replay session.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:requestIP name="listActiveReplays" number="6" supportInReplay="false"
                       comment="The listActiveReplays operation allows a consumer to request the object instance identifiers and playback details of the active replay sessions.">
          <mal:messages>
            <mal:request/>
            <mal:response>
              <mal:field name="replaySummary"
                         comment="The response shall contain a list of ReplaySummary structures that detail the active replay sessions.">
                <mal:type list="true" name="ReplaySummary" service="Replay" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:invokeIP name="addReplay" number="7" supportInReplay="false"
                      comment="The addReplay operation allows a consumer to create a new replay session.&#xA;The new Replay COM object is expected to be stored in the COM archive by the provider of the replay service.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="replayDetails"
                         comment="The replayDetails field shall hold the ReplayDetails of the new replay session to be added.&#xA;The sessionName field of the supplied ReplayDetails structure must not be the wildcard '*', 'LIVE', or empty (an INVALID error shall be returned in this case).&#xA;The supplied sessionName must be unique among all Replay objects for the provider otherwise a DUPLICATE error shall be raised.&#xA;Replay sessions shall be based on an existing LIVE or SIMULATION session.&#xA;If the sourceSessionType field is set to REPLAY then an INVALID error shall be returned.&#xA;The sourceSessionType and sourceSessionName field shall be used to match an existing LIVE or SIMULATION session.&#xA;If the source session cannot be found then an UNKNOWN error shall be returned.&#xA;If an error is raised then a new replay shall not be added as a result of this operation call.">
                <mal:type name="ReplayDetails" service="Replay" area="Common"/>
              </mal:field>
              <mal:field name="playbackSettings"
                         comment="The playbackSettings field shall contain the initial playback settings for the replay.">
                <mal:type name="ReplayPlaybackSettings" service="Replay" area="Common"/>
              </mal:field>
              <mal:field name="initialTime"
                         comment="The initialTime field shall contain the initial time of the replay session.">
                <mal:type name="Time" area="MAL"/>
              </mal:field>
              <mal:field name="returnProviderSummary">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement comment="The operation shall return the acknowledgement if the supplied values are valid but before the new replay session has been created."/>
            <mal:response>
              <mal:field name="replayObjInstId"
                         comment="The response shall contain the object instance identifier of the new Replay object.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
              <mal:field name="serviceDetails"
                         comment="If the returnProviderSummary field is set to TRUE then the operation shall populate the serviceDetails field with a list of service providers that provide the replay session.&#xA;If the returnProviderSummary field is set to FALSE then the operation shall populate the serviceDetails field with a NULL.">
                <mal:type list="true" name="ProviderSummary" service="Directory" area="Common"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Supplied replay details are invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Session name already exists.">
              <mal:type name="DUPLICATE" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Source replay session is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
        <mal:submitIP name="removeReplay" number="8" supportInReplay="false"
                      comment="The removeReplay operation allows a consumer to remove a replay from the set of replays supported by the replay provider.&#xA;The operation does not remove the Replay object from the COM archive, merely removes the object from the provider. This permits existing ReplayStatus objects to continue to reference the correct Replay object in the COM archive.">
          <mal:messages>
            <mal:submit>
              <mal:field name="replayObjInstId"
                         comment="The replayObjInstId field shall hold the object instance identifier of the Replay object to be removed from the provider.&#xA;If a provided Replay object instance identifier does not match an existing replay session then this operation shall fail with an UNKNOWN error.&#xA;Matched Replay objects shall not be removed from the COM archive only the list of active replay sessions in the provider.&#xA;If an error is raised then no replays shall be removed as a result of this operation call.&#xA;If the operation succeeds then the provider shall remove the replay session from the active replays.">
                <mal:type name="Long" area="MAL"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Unknown replay session.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:enumeration name="ReplayState" shortFormPart="4"
                         comment="The ReplayState enumeration represents the possible states of a replay.">
          <mal:item value="STOPPED" nvalue="1" comment="Replay is stopped."/>
          <mal:item value="FORWARDS" nvalue="2" comment="Replay is playing forwards."/>
          <mal:item value="BACKWARDS" nvalue="3" comment="Replay is playing backwards."/>
        </mal:enumeration>
        <mal:composite name="ReplayDetails" shortFormPart="1"
                       comment="The ReplayDetails structure contains the replay details.">
          <mal:field name="sessionName" canBeNull="false"
                     comment="The session name for this replay session.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="sourceSessionType" canBeNull="false"
                     comment="Type of the session used as a source for the replay session (cannot be REPLAY).">
            <mal:type name="SessionType" area="MAL"/>
          </mal:field>
          <mal:field name="sourceSessionName" canBeNull="false"
                     comment="Identifier of the session used as a source for the replay session.">
            <mal:type name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ReplayPlaybackSettings" shortFormPart="2"
                       comment="The ReplayPlaybackSettings structure holds the replay playback settings.">
          <mal:field name="rate" canBeNull="false" comment="Replay rate for the replay session.">
            <mal:type name="Float" area="MAL"/>
          </mal:field>
          <mal:field name="interval" canBeNull="false"
                     comment="Replay step interval for the replay session.">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ReplayStatusDetails" shortFormPart="3"
                       comment="The ReplayStatusDetails holds the current state of a replay.">
          <mal:field name="state" canBeNull="false"
                     comment="The current state of the replay session.">
            <mal:type name="ReplayState" service="Replay" area="Common"/>
          </mal:field>
          <mal:field name="currentTime" canBeNull="false"
                     comment="The current time of the replay session.">
            <mal:type name="Time" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ReplaySummary" shortFormPart="5"
                       comment="The ReplaySummary structure holds the summary details of a replay session.">
          <mal:field name="objInstId" canBeNull="false"
                     comment="The object instance identifier of the replay.">
            <mal:type name="Long" area="MAL"/>
          </mal:field>
          <mal:field name="details" canBeNull="false" comment="The current replay details.">
            <mal:type name="ReplayDetails" service="Replay" area="Common"/>
          </mal:field>
          <mal:field name="playbackSettings" canBeNull="false"
                     comment="The current replay playback settings.">
            <mal:type name="ReplayPlaybackSettings" service="Replay" area="Common"/>
          </mal:field>
          <mal:field name="currentState" canBeNull="false"
                     comment="The current state and time of the replay.">
            <mal:type name="ReplayStatusDetails" service="Replay" area="Common"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Instances of a replay session shall be represented as a Replay COM object.&#xA;The Replay object does not use the related link and it shall be set to NULL.&#xA;The source link of the Replay object should be the object that caused it to be created, most likely a COM OperationActivity object.">
          <com:object name="ReplayIdentity" number="1">
            <com:objectType>
              <mal:type name="ReplayDetails" service="Replay" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="ReplaySettings" number="2">
            <com:objectType>
              <mal:type name="ReplayPlaybackSettings" service="Replay" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Replay" area="Common"/>
            </com:relatedObject>
          </com:object>
        </com:objects>
        <com:events comment="When either the replay state or current time of a replay session changes a ReplayStatus COM event shall be generated and published.&#xA;The event shall be published using the COM event service.&#xA;The related link of the ReplayStatus event object shall link to the Replay object that represents the replay session.&#xA;The source link of the ReplayStatus event object shall not be used and set to NULL.">
          <com:event name="ReplayStatus" number="3">
            <com:objectType>
              <mal:type name="ReplayStatusDetails" service="Replay" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="1" service="Replay" area="Common"/>
            </com:relatedObject>
          </com:event>
        </com:events>
        <com:archiveUsage comment="Replay objects should be stored in the COM archive.&#xA;When a replay status event is published, the ReplayStatus event object should not be stored in the COM archive by the publisher as these events are very frequent and only show the current status of the replay."/>
      </com:features>
    </mal:service>
    <mal:service xsi:type="com:ExtendedServiceType" name="Configuration" number="5"
                 comment="The Configuration service allows a service consumer to activate pre-defined configurations of a service provider. &#xA;The service uses a COM object to represent the different configurations allowed by a service provider; a service consumer selects one configuration to activate using the Configuration service activate operation.&#xA;If a file is to be used to represent a configuration then the configuration service defines an existing COM object, ConfigurationFile, to represent that specific configuration.&#xA;The contents of a configuration for a service provider is deployment specific however the management of these configurations, and the selection of a configuration for current use, is the purpose of this service.&#xA;Implementations of this service may also use bespoke methods for configuration representation (such as hardcoded configuration) which is outside the scope of this specification, however, the status and management of these configurations can still be managed with this service.">
      <mal:documentation name="High Level Requirements" order="1">The configuration service shall provide:
&lt;ol&gt;
 &lt;li&gt;the capability for activating a configuration.&lt;/li&gt;
&lt;/ol&gt;

</mal:documentation>
      <mal:capabilitySet number="1">
        <mal:submitIP name="activate" number="1" supportInReplay="false"
                      comment="The activate operation instructs a service provider to make a specific configuration active.">
          <mal:messages>
            <mal:submit>
              <mal:field name="configObjId"
                         comment="The operation shall take a COM object identifier that identifies the configuration to activate.&#xA;An UNKNOWN error shall be returned if the object instance identifier does not match an existing configuration.&#xA;If the object instance identifier does not reference a valid configuration for the service provider an INVALID error shall be returned.&#xA;A ConfigurationActivation COM Event shall be published if no errors are being returned.&#xA;A ConfigurationActivationRequest COM Event shall contain the selected service to be reconfigured.&#xA;The service provider that implements the selected service shall, after the reception of the event, reconfigure itself and publish a ConfigurationSwitchResult COM event.&#xA;If the operation fails the previous configuration shall remain active.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested configuration is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested configuration is invalid.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2">
        <mal:requestIP name="list" number="2" supportInReplay="false"
                       comment="The list operation returns list of known configurations for a certain configuration type in a specific domain.">
          <mal:messages>
            <mal:request>
              <mal:field name="service"
                         comment="The configurationType argument shall hold the type of configuration to be listed.&#xA;The domain request argument shall contain the COM object instance identifier and the domain of the configurable component to return the list of possible configurations.&#xA;If the domain contains a wildcard in any of its parts, then the returned configurations shall be Composite Configurations.">
                <mal:type name="ServiceProviderKey" service="Configuration" area="Common"/>
              </mal:field>
              <mal:field name="type"
                         comment="If any of the service argument fields contains a wildcard &amp;lsquo;0&amp;rsquo; then the returned configurations shall be Provider Configurations.&#xA;If the domain and service arguments contain no wildcards then the returned configurations shall be Service Configurations.&#xA;An UNKNOWN error shall be returned if the object instance identifier does not match an existing configuration.&#xA;If the object instance identifier does not reference a valid configuration for the service provider an INVALID error shall be returned.">
                <mal:type name="ConfigurationType" service="Configuration" area="Common"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="objInstIds"
                         comment="Return objectIds can be used in the activate and get operations.">
                <mal:type list="true" name="ObjectId" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested object is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested configuration is not a valid configuration object type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <mal:requestIP name="getCurrent" number="3" supportInReplay="false"
                       comment="The getCurrent operation returns the currently selected configuration of a &lt;Service/Provider/Composite&gt;.">
          <mal:messages>
            <mal:request>
              <mal:field name="service"
                         comment="The domain request argument shall contain the COM object instance identifier and the domain of the configurable component to return the list of possible configurations.&#xA;If the domain contains a wildcard in any of its parts, then configurations matching that domain shall be returned.&#xA;If any of the service argument fields contains a wildcard then the configurations matching that criteria shall be returned.&#xA;If the domain and service arguments contain no wildcards then configurations for a specific service shall be returned.&#xA;If there are wildcards both on the domain and service fields, then&amp;hellip;&#xA;An UNKNOWN error shall be returned if the combination of domain and service fields don't match an existing configuration.&#xA;No wildcards are supported, an error must be returned in this case.">
                <mal:type name="ServiceProviderKey" service="Configuration" area="Common"/>
              </mal:field>
              <mal:field name="type">
                <mal:type name="ConfigurationType" service="Configuration" area="Common"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="objInstId">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested configuration is not a valid configuration object type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested object is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3">
        <mal:requestIP name="exportXML" number="4" supportInReplay="false"
                       comment="The exportXML operation returns the actual Configuration information in the XML format from the configuration object stored in the Archive.&#xA;The returned XML is in the standardised format and one of two levels of detail, compact or complete, can be selected. Compact contains just the COM object instance identifiers with the respective domains and object types whereas  complete augments the compact with the additional set of values inside the respective service objects. ">
          <mal:messages>
            <mal:request>
              <mal:field name="confObjId"
                         comment="The confObjId argument shall contain the COM object instance identifier of the configuration object to return the XML representation of.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
              <mal:field name="getComplete"
                         comment="The getComplete Boolean shall be set to True if the returned XML is to be in the complete standardised format, otherwise it will be in the compact standardised format.">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="xmlConfiguration"
                         comment="The returned File object shall contain the configuration XML.&#xA;The Configuration object shall not be deleted from the COM Archive.">
                <mal:type name="File" area="MAL"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Requested configuration is not a valid configuration object type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Requested object is unknown.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4">
        <mal:submitIP name="add" number="5" supportInReplay="false"
                      comment="The add operation makes a new Configuration available on the Configuration Service. The Configuration must already exist in the COM archive to be added to the Configuration Service.">
          <mal:messages>
            <mal:submit>
              <mal:field name="configObj"
                         comment="The first argument shall contain the object identifier of the configurable object to add the configurations to.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
              <mal:field name="configObjIds"
                         comment="The second argument shall contain a list of configurations to add to the list of configurations available for the supplied first argument.">
                <mal:type list="true" name="ObjectId" area="COM"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="Supplied configuration is not a valid configuration object type.">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="Supplied object is unknown in the COM archive.">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <mal:submitIP name="remove" number="6" supportInReplay="false"
                      comment="The remove operation, removes a Configuration from the Configuration service.">
          <mal:messages>
            <mal:submit>
              <mal:field name="configObj">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
            <mal:errorRef comment="">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5">
        <mal:invokeIP name="storeCurrent" number="7" supportInReplay="false"
                      comment="The StoreCurrentConfiguration generates a new Configuration object with the current Configuration of a certain &lt;Service/Provider/Composite&gt; and stores the Configuration in the COM archive. Afterwards, the configuration can be optionally added to the list of available configurations. The returned objectId uniquely identifies the configuration.">
          <mal:messages>
            <mal:invoke>
              <mal:field name="service"
                         comment="If the domain contains a wildcard in any of its parts, then the returned configurations shall be Composite Configurations.&#xA;If any of the service argument fields contains a wildcard &amp;lsquo;0&amp;rsquo; then the returned configurations shall be Provider Configurations.&#xA;If the domain and service arguments contain no wildcards then the returned configurations shall be Service Configurations.">
                <mal:type name="ServiceProviderKey" service="Configuration" area="Common"/>
              </mal:field>
              <mal:field name="type">
                <mal:type name="ConfigurationType" service="Configuration" area="Common"/>
              </mal:field>
              <mal:field name="autoAdd">
                <mal:type name="Boolean" area="MAL"/>
              </mal:field>
            </mal:invoke>
            <mal:acknowledgement/>
            <mal:response>
              <mal:field name="objInstId">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
            <mal:errorRef comment="">
              <mal:type name="UNKNOWN" area="MAL"/>
            </mal:errorRef>
          </mal:errors>
        </mal:invokeIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6">
        <mal:requestIP name="importXML" number="8" supportInReplay="false"
                       comment="The importXML generates a new Configuration object from a XML File and stores the Configuration in the COM archive. Afterwards, the configuration can be optionally added to the list of available configurations.">
          <mal:messages>
            <mal:request>
              <mal:field name="xmlFile"
                         comment="The newly generated Configuration object should be checked for consistency. An error shall be raised if the configuration is not valid.&#xA;For every object present within the XML file that does not exist in the COM Archive, the Configuration service shall create a new object with the same content and store the object in the COM Archive.&#xA;If the object already exists in the COM Archive, nothing shall be created.&#xA;The newly generated Configuration object shall always reference existing objects in the Archive.">
                <mal:type name="File" area="MAL"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="objInstIds"
                         comment="The return response shall contain the object identifier of the new top level configuration object.">
                <mal:type name="ObjectId" area="COM"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="">
              <mal:type name="INVALID" area="COM"/>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:enumeration name="ConfigurationType" shortFormPart="4" comment="">
          <mal:item value="COMPOSITE" nvalue="1" comment=""/>
          <mal:item value="PROVIDER" nvalue="2" comment=""/>
          <mal:item value="SERVICE" nvalue="3" comment=""/>
        </mal:enumeration>
        <mal:composite name="ConfigurationObjectSet" shortFormPart="1" comment="">
          <mal:field name="objType" canBeNull="false" comment="">
            <mal:type name="ObjectType" area="COM"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false" comment="">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
          <mal:field name="objInstIds" canBeNull="false" comment="">
            <mal:type list="true" name="Long" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ConfigurationObjectDetails" shortFormPart="2" comment="">
          <mal:field name="configObjects" canBeNull="false" comment="">
            <mal:type list="true" name="ConfigurationObjectSet" service="Configuration" area="Common"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="ServiceProviderKey" shortFormPart="3"
                       comment="The ServiceProviderKey structure holds information to uniquely identify a service Provider.">
          <mal:field name="serviceKey"
                     comment="The area, service, and version fields. If NULL then all the services will be matched.">
            <mal:type name="ServiceKey" service="Directory" area="Common"/>
          </mal:field>
          <mal:field name="domain" canBeNull="false"
                     comment="The domain of the provider. Only the objects whose domain&#xA;matches the provided domain will&#xA;be returned. The domain field&#xA;supports the wildcard value of &amp;lsquo;*&amp;rsquo;&#xA;only in the last part of the domain.">
            <mal:type list="true" name="Identifier" area="MAL"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
      <com:features>
        <com:objects comment="Two COM objects shall be used to hold the configuration definition details, the first is a ConfigurationDefinition COM object that holds the activation state of the configuration and a second COM object that holds the actual configuration details.&#xA;The ConfigurationDefinition object shall use the source link to indicate which COM object holds the actual configuration information.&#xA;The ConfigurationDefinition object does not use the related link and it shall be set to NULL.&#xA;The body of the ConfigurationDefinition object shall be a Boolean which indicates whether it is active or not.&#xA;The COM object that holds the configuration details may be represented as a file in which case a ConfigurationFile COM object should be used to represent it.">
          <com:object name="ServiceConfiguration" number="1">
            <com:objectType>
              <mal:type name="ServiceKey" service="Directory" area="Common"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="4" service="Configuration" area="Common"/>
            </com:relatedObject>
          </com:object>
          <com:object name="ProviderConfiguration" number="2">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="4" service="Configuration" area="Common"/>
            </com:relatedObject>
          </com:object>
          <com:object name="CompositeConfiguration" number="3">
            <com:objectType>
              <mal:type name="Identifier" area="MAL"/>
            </com:objectType>
            <com:relatedObject>
              <com:objectType number="4" service="Configuration" area="Common"/>
            </com:relatedObject>
          </com:object>
          <com:object name="ConfigurationObjects" number="4">
            <com:objectType>
              <mal:type name="ConfigurationObjectDetails" service="Configuration" area="Common"/>
            </com:objectType>
          </com:object>
          <com:object name="ConfigurationFile" number="5">
            <com:objectType>
              <mal:type name="File" area="MAL"/>
            </com:objectType>
          </com:object>
          <com:object name="ProviderConfigurations" number="6">
            <com:relatedObject>
              <com:objectType number="1" service="Directory" area="Common"/>
            </com:relatedObject>
            <com:sourceObject>
              <com:objectType number="2" service="Configuration" area="Common"/>
            </com:sourceObject>
          </com:object>
        </com:objects>
        <com:events comment="A ConfigurationSwitch COM event represents a request change in active configuration. A ConfigurationSwitch COM event body shall hold the configuration to be activated.&#xA;The ConfigurationSwitch COM event related link shall point to the previous active configuration.&#xA;The body of the ConfigurationActivation event shall be NULL if no configuration was previously active.&#xA;The ConfigurationSwitch COM event source link should indicate the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;A ConfigurationSwitch COM event shall be raised when a configuration is made active.&#xA;A ConfigurationStore COM event represents a request to store the current configuration. A ConfigurationSwitch COM event body shall hold the &#34;service that must store its configurations&#34; (?!).&#xA;The ConfigurationStore COM event related link should point to the previous active configuration.&#xA;The body of the ConfigurationStore COM event shall be NULL if no configuration was previously active.The ConfigurationStore COM event source link should indicate the object that caused it to be created, most likely a COM OperationActivity object or an operator login in the case of off-line editors being used.&#xA;A ConfigurationStore COM event shall be raised when a configuration is made active.&#xA;A ConfigurationStore COM event shall be raised when the current configuration of a service must be stored.">
          <com:event name="ConfigurationSwitch" number="8">
            <com:objectType>
              <mal:type name="ObjectId" area="COM"/>
            </com:objectType>
            <com:sourceObject comment="The source link of the event is the object that triggered the activation, most likely the activate operation."/>
          </com:event>
          <com:event name="ConfigurationSwitched" number="9">
            <com:objectType>
              <mal:type name="Boolean" area="MAL"/>
            </com:objectType>
            <com:relatedObject comment="The related object contains the objInstId of the previous active configuration."/>
            <com:sourceObject comment="The source link of the event is the ConfigurationSwitch COM event that triggered the switch.">
              <com:objectType number="8" service="Configuration" area="Common"/>
            </com:sourceObject>
          </com:event>
          <com:event name="ConfigurationStore" number="10">
            <com:sourceObject comment="The source link of the event is the object that triggered the activation, most likely the storeCurrent operation."/>
          </com:event>
          <com:event name="ConfigurationStored" number="11">
            <com:objectType>
              <mal:type name="Boolean" area="MAL"/>
            </com:objectType>
            <com:relatedObject comment="The related link of the event is the ConfigurationStore COM object that triggered the storing.">
              <com:objectType number="10" service="Configuration" area="Common"/>
            </com:relatedObject>
            <com:sourceObject comment="The source of the event can be a ServiceConfiguration, ProviderConfiguration or CompositeConfiguration COM object."/>
          </com:event>
        </com:events>
        <com:archiveUsage comment="ConfigurationDefinition objects should be stored in the COM archive.&#xA;The COM objects that hold the actual configuration definition details should be stored in the COM archive.&#xA;When a configuration activation event is published, the ConfigurationActivation event object should be stored in the COM archive."/>
      </com:features>
    </mal:service>
    <mal:errors>
      <mal:error name="TIMEDOUT" number="70010" comment="Operation specific"/>
      <mal:error name="CANCELLED" number="70011" comment="Operation specific"/>
    </mal:errors>
  </mal:area>
</mal:specification>